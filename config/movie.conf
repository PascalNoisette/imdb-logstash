#
# imdb-logstash
#
# Copyright Â© 2015 Pascal NOISETTE
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

input { 
    gunzip {
        path => [
                "./log/movies.list.gz",
                "./log/color-info.list.gz",
                "./log/countries.list.gz",
                "./log/genres.list.gz",
                "./log/keywords.list.gz",
                "./log/language.list.gz",
                "./log/locations.list.gz",
                "./log/production-companies.list.gz",
                "./log/running-times.list.gz",
                "./log/sound-mix.list.gz",
                "./log/special-effects-companies.list.gz",
                "./log/technical.list.gz",
                "./log/distributors.list.gz"
        ]
        codec => plain {
                charset => "CP1252"
        }
    }
}

filter {
    grok {
        patterns_dir => [ "patterns" ]
        match => [ "message", '%{IMDB_MOVIE_REFERENCE}\t+(?<value>.*)' ]
    }
    grok {
        patterns_dir => [ "patterns" ]
        match => [ "path", ".*/%{USERNAME:attribute}\.list.gz" ]
    }
    mutate {
        remove_field => ["message", "@version", "line_number", "host", "path"]
        strip => ["title", "pro_title", "movie_title", "value"]
        gsub => [
            "title", '"', '',
            "pro_title", '"', ''
        ]
    }
    date {
        match => ["release", "y"]
        timezone => "UTC"
    }
    mutate {
        add_field => ["%{attribute}" , "%{value}"]
        remove_field => ["attribute", "value", "release"]
    }
}


output {
    if "_grokparsefailure"  not in [tags] {
      stdout { codec => rubydebug }
      #elasticsearch {}
    }

}